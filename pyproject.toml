[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "maritime-activity-reports-cdc"
version = "1.0.0"
description = "Maritime Activity Reports with CDC/CDF Medallion Architecture"
authors = [
    {name = "Data Engineering Team", email = "data-team@your-company.com"},
]
dependencies = [
    "pyspark>=3.5.0",
    "delta-spark>=3.2.1",
    "google-cloud-bigquery>=3.11.4",
    "google-cloud-storage>=2.10.0",
    "google-cloud-pubsub>=2.18.4",
    "apache-airflow>=2.8.0",
    "apache-airflow-providers-google>=10.10.0",
    "h3>=3.7.6",
    "geopandas>=0.14.0",
    "shapely>=2.0.0",
    "typer>=0.9.0",
    "pydantic>=2.5.0",
    "structlog>=23.2.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
]
requires-python = ">=3.9"
readme = "README.md"
license = {text = "MIT"}
keywords = ["maritime", "data-engineering", "cdc", "delta-lake", "medallion-architecture"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.scripts]
maritime-reports = "maritime_activity_reports.cli:app"

[project.optional-dependencies]
dev = [
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "pre-commit>=3.5.0",
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
]

[tool.pdm]
distribution = true

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["maritime_activity_reports"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["src/maritime_activity_reports/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["src/maritime_activity_reports"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
